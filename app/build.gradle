plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'jacoco'
}

jacoco{
    toolVersion = '0.8.2'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.pruebacondorlabs"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    def coverageSourceDirs = [
            "src/main/java"
    ]
    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/dominio*.*'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    classDirectories.from(files([ debugTree ]))
    additionalSourceDirs.from(files(coverageSourceDirs))
    sourceDirectories.from(files(coverageSourceDirs))
    executionData.from(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",'outputs/code-coverage/connected/*coverage.ec'
    ]))
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
task moveReport(type: Copy) {
    if (file("${buildDir}/jacoco").exists()) {
        from("${buildDir}/jacoco/")
        include 'testDebugUnitTest.exec'
        destinationDir file("${rootProject.buildDir}/jacoco/")
        rename 'testDebugUnitTest.exec', "${project.name}.exec"
        ant.echo(message: "$name")
    }
}


def daggerVersion = '2.21'

dependencies {
    api project(':utilities')
    api project(':domain')
    api project(':team')
    implementation platform('com.google.firebase:firebase-bom:26.8.0')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.multidex:multidex:2.0.1'
    //ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    //Rx
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    //Dagger
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.7.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.1'
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.7.1"
    implementation 'com.squareup.okhttp3:okhttp:4.2.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.2.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.0'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.squareup.picasso:picasso:2.71828'
    //firebase
    implementation 'com.google.firebase:firebase-config'

    def room_version = "2.2.6"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    testImplementation 'org.mockito:mockito-core:2.19.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'com.github.marcinOz:TestCoroutineRule:1.0.1'
    testImplementation 'junit:junit:4.+'
    testImplementation "io.mockk:mockk:1.10.0"
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.2'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
}